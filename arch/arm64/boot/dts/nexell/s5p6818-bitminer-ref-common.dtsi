/*
 * Copyright (C) 2018  Nexell Co., Ltd.
 * Author: Jinyong Lee <justin@nexell.co.kr>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include "s5p6818.dtsi"

#define PMIC_PDATA_INIT(_id, _rname, _minuv,    \
                        _maxuv, _init_uv, _init_enable,         \
                        _set_init_uV, _slp_slots)       \
                regulator-name = _rname;                \
                regulator-min-microvolt = <_minuv>;     \
                regulator-max-microvolt = <_maxuv>;     \
                nx,id = <_id>;                          \
                nx,init_enable = <_init_enable>;        \
                nx,init_uV = <_init_uv>;                \
                nx,set_init_uV = <_set_init_uV>;        \
                nx,sleep_slots = <_slp_slots>;

/ {
	memory {
		device_type = "memory";
		reg = <0x40000000 0x7db00000>;
	};

	aliases {
/*		i2c1 = &i2c_gpio1; */
/*		i2c3 = &i2c_gpio3; */
		i2c5 = &i2c_gpio5;
/*		i2c6 = &i2c_gpio6; */
		i2c7 = &i2c_gpio7;
	};

	soc {
		#include "s5p6818-pinctrl.dtsi"
		clocks {
			uart3:uart@c00ab000 { clock-frequency = <147500000>; };
			vip0:vip@c00c1000 { src-force = <4>; };
			i2c2:i2c@c00b0000  { clock-frequency = <200000000>; };
			pwm0:pwm0@c00ba000 {
				clk-input = <I_PLL2>;
				clock-frequency = <10000000>;
			};
			pwm1:pwm1@c00ba000 {
				clk-input = <I_PLL2>;
				clock-frequency = <10000000>;
			};
			pwm2:pwm2@c00be000 {
				clk-input = <I_PLL2>;
				clock-frequency = <10000000>;
			};
			pwm3:pwm3@c00be000 {
				clk-input = <I_PLL2>;
				clock-frequency = <10000000>;
			};

		};

		serial0:serial@c00a1000 {
			dmas = <&pl08xdma0 2>, <&pl08xdma0 3>;
			dma-names = "tx", "rx";
			status ="okay";
		};

		serial1:serial@c00a0000 {
			dmas = <&pl08xdma0 0>, <&pl08xdma0 1>;
			dma-names = "tx", "rx";
			status ="okay";
		};

		serial2:serial@c00a2000 {
			dmas = <&pl08xdma0 4>, <&pl08xdma0 5>;
			dma-names = "tx", "rx";
			status ="okay";
		};

		serial3:serial@c00a3000 {
			status ="okay";
		};

		serial4:serial@c006d000 {
			status ="okay";
		};

		amba {
			pl08xdma0:pl08xdma@c0000000 {
				use_isr;

				ch12 {
					slave_wait_flush_dma;
				};

				ch13 {
					slave_wait_flush_dma;
				};

				ch14 {
					slave_wait_flush_dma;
				};

				ch15 {
					slave_wait_flush_dma;
				};
			};

			pl08xdma1:pl08xdma@c0001000 {
				use_isr;

				ch0 {
					slave_wait_flush_dma;
				};

				ch1 {
					slave_wait_flush_dma;
				};
			};
		};

		dw_mmc_2:dw_mmc@c0069000 {
			num-slots = <1>;
			bus-width = <8>;
			mmc-ddr-1_8v;
			pinctrl-0 = <&sdmmc2_cclk &sdmmc2_cmd
						&sdmmc2_bus4 &sdmmc2_bus8>;
			soc,tieoff = <NX_TIEOFF_MMC_8BIT 1>;
			cap-mmc-highspeed;
			broken-cd;
			non-removable;
			clock-frequency = <200000000>;
			card-detect-delay = <200>;
			disable-wp;
			status = "okay";
			nexell,drive_dly = <0x0>;
			nexell,drive_shift = <0x03>;
			nexell,sample_dly = <0x00>;
			nexell,sample_shift = <0x02>;
		};

		dw_mmc_0:dw_mmc@c0062000 {
			num-slots = <1>;
			bus-width = <4>;
			cap-sd-highspeed;
			clock-frequency = <100000000>;
			card-detect-delay = <200>;
			disable-wp;
			cd-gpios = <&gpio_e 31 0>;
			cd-inverted;
			nexell,drive_dly = <0x0>;
			nexell,drive_shift = <0x02>;
			nexell,sample_dly = <0x00>;
			nexell,sample_shift = <0x01>;
			status = "okay";
		};

		watchdog@c0019000 {
			status = "okay";
		};

		rtc@c0010c00 {
			status = "okay";
		};

		nexell_usbphy: nexell-usbphy@c0012000 {
			status = "okay";
		};

		ehci@c0030000 {
			status = "okay";
			port@0 {
				status = "okay";
			};
		};

		ohci@c0020000 {
			status = "okay";
			port@0 {
				status = "okay";
			};
		};

		dwc2otg@c0040000 {
			gpios = <&alive_0 5 0>;
			status = "okay";
		};

		pwm:pwm@c0018000 {
			clock-names = "timers", "pwm-tclk0", "pwm-tclk1";
			clocks = <&pclk>, <&pwm0>, <&pwm1>;
			pinctrl-names = "default";
			pinctrl-0 = <&pwm0_pin &pwm1_pin>;
			samsung,pwm-outputs = <0>, <1>;
			status = "okay";
		};
/*
		i2s_0:i2s@c0055000 {
			#sound-dai-cells = <1>;
			master-mode = <1>;
			mclk-in = <0>;
			trans-mode = <0>;
			frame-bit = <32>;
			sample-rate = <48000>;
			pre-supply-mclk = <1>;
			status = "okay";
		};

		i2s_1:i2s@c0056000 {
			#sound-dai-cells = <1>;
			master-mode = <1>;
			mclk-in = <0>;
			trans-mode = <0>;
			frame-bit = <32>;
			sample-rate = <48000>;
			pre-supply-mclk = <1>;
			status = "okay";
		};
*/
		pinctrl@C0010000 {
			key_power:key_power {
				nexell,pins = "alive-0";
				nexell,pin-function = <0>;
				nexell,pin-pull = <1>;
				nexell,pin-strength = <0>;
			};

			key_back:key_back {
				nexell,pins = "alive-1";
				nexell,pin-function = <0>;
				nexell,pin-pull = <1>;
				nexell,pin-strength = <0>;
			};

			hash0_reset: hash0-reset {
				nexell,pins = "gpiob-4";
				nexell,pin-dir = <NX_GPIO_OUTPUT>;		\
				nexell,pin-val = <NX_GPIO_LOW>;		\
				nexell,pin-function = <0>;
				nexell,pin-pull = <NX_PIN_PULL_UP>;
				nexell,pin-strength = <0>;
			};
			hash0g_irq: hash0g-irq {
				nexell,pins = "gpiob-2";
				nexell,pin-function = <0>;
				nexell,pin-pull = <NX_PIN_PULL_UP>;
				nexell,pin-strength = <0>;
			};
			hash0o_irq: hash0o-irq {
				nexell,pins = "gpiob-10";
				nexell,pin-function = <0>;
				nexell,pin-pull = <NX_PIN_PULL_UP>;
				nexell,pin-strength = <0>;
			};
		};

		regulators {
			VCC_DCDC1:dcdc2 { PMIC_PDATA_INIT( 1,
				"nxe2000_dcdc2",
                                1000000, 1500000,
				1200000, 1, 0, 0x4)
                                regulator-always-on;
                                regulator-boot-on;};
			}; /* regulators */

		scaler@c0066000 {
			status = "okay";
		};
	};	/*** soc ***/

	vcc_spk: regulator-fix@2 {
		compatible = "regulator-fixed";

		regulator-name = "SPK Vcc";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-boot-on;
		regulator-always-on;

		gpio = <&gpio_d 3 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};

	vdd_a: regulator-fix@3 {
		compatible = "regulator-fixed";

		regulator-name = "A Vdd";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-boot-on;
		regulator-always-on;

		gpio = <&gpio_e 17 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};

	vdd_db: regulator-fix@4 {
		compatible = "regulator-fixed";

		regulator-name = "DB Vdd";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
		regulator-always-on;

		gpio = <&gpio_e 20 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};

	vcc_monoamp: regulator-fix@5 {
		compatible = "regulator-fixed";

		regulator-name = "MONOAMP Vcc";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-boot-on;
		regulator-always-on;

		gpio = <&gpio_d 24 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};

	amp2_en: regulator-fix@6 {
		compatible = "regulator-fixed";

		regulator-name = "AMP2 EN";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-boot-on;
		regulator-always-on;

		gpio = <&gpio_d 25 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};

	i2c_gpio1: i2c@1 {
		compatible = "i2c-gpio";
		gpios = <&gpio_d 5 0 /* sda */
		    &gpio_d 4 0 /* scl */>;
		i2c-gpio,delay-us = <100>;
		#address-cells = <1>;
		#size-cells = <0>;

		rt5640: rt5640@1c {
			#sound-dai-cells = <0>;
			compatible = "realtek,rt5640";
			reg = <0x1c>;
			realtek,ldo1-en-gpios = <&gpio_c 4 GPIO_ACTIVE_HIGH>;
		};
	};

	i2c_gpio3: i2c@3 {
		compatible = "i2c-gpio";
		gpios = <&gpio_b 16 0 /* sda */
		    &gpio_b 18 0 /* scl */>;
		i2c-gpio,delay-us = <100>;
		#address-cells = <1>;
		#size-cells = <0>;

		alc5623: alc5623@1a {
			#sound-dai-cells = <0>;
			compatible = "realtek,alc5623";
			reg = <0x1a>;
		};
	};

	i2c_gpio5: i2c@5 {
		compatible = "i2c-gpio";
		gpios = <&gpio_c 27 0 /* sda */
		    &gpio_c 25 0 /* scl */
		    >;
		i2c-gpio,delay-us = <100>;
		#address-cells = <1>;
		#size-cells = <0>;

		usb2514: usb2514@2c {
			compatible = "smsc,usb2514";
			reg = <0x2c>;
			reset-gpios = <&gpio_e 7 1>;
			initial-mode = <1>;
		};
	};

	i2c_gpio6: i2c@6 {
		compatible = "i2c-gpio";
		gpios = <&gpio_d 23 0 /* sda */
		    &gpio_d 22 0 /* scl */
		    >;
		i2c-gpio,delay-us = <100>;
		#address-cells = <1>;
		#size-cells = <0>;
	};

	i2c_gpio7: i2c@7 {
		status = "disabled";
	};

	gpio_key: gpio_keys {
		compatible = "gpio-keys";
		#address-cells = <1>;
		#size-cells = <0>;
		pinctrl-names = "default";
		pinctrl-0 = <&key_power &key_back>;

		power {
			label = "Power";
			gpios = <&alive_0 0 0>;
			linux,code = <KEY_POWER>;
			gpio-key,wakeup;
		};

		back {
			label = "Back";
			gpios = <&alive_0 1 0>;
			linux,code = <KEY_BACK>;
		};
	};

	nexell-ion@0 {
		compatible = "nexell,ion";

		heap_sys_user@0 {
			heap-type = "ion_system";
		};

		heap_sys_contig@0 {
			heap-type = "ion_system_contig";
		};

		heap_dma@0 {
			heap-type = "ion_dma";
		};
	};
};

&spi_0 {
	status = "okay";
/*	cs-gpios = <&gpio_c 30 0>; */
	not-queued-transfer = <1>;
	spidev@0 {
		compatible = "linux,spidev";
		reg = <0>;
		spi-max-frequency = <20000000>;
		controller-data {
			cs-per-message = <1>;
			samsung,spi-feedback-delay = <0>;
		};
	};
};

&spi_1 {
	status = "okay";
/*	cs-gpios = <&gpio_e 15 0>; */
	not-queued-transfer = <1>;
	spidev@0 {
		compatible = "linux,spidev";
		reg = <0>;
		spi-max-frequency = <20000000>;
		controller-data {
			cs-per-message = <1>;
			samsung,spi-feedback-delay = <0>;
		};
	};
};

&spi_2 {
	status = "okay";
/*	cs-gpios = <&gpio_c 10 0>; */
	not-queued-transfer = <1>;
	spidev@0 {
		compatible = "linux,spidev";
		reg = <0>;
		spi-max-frequency = <20000000>;
		controller-data {
			cs-per-message = <1>;
			samsung,spi-feedback-delay = <0>;
		};
	};
};

&vip_0 {
	status = "okay";
};

&i2c_2 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";
	rate = <400000>;
};
